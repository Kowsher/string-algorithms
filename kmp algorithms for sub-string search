///O(n+m)
#include<bits/stdc++.h>
using namespace std;


int prefix(string pat, int Pi[]) {
    Pi[0] = -1;
    int i = 1, j = 0;
    while(i<pat.size()) {
        if (pat[i] == pat[j])
            Pi[++i] = ++j;
        else if (j == 0)
            Pi[++i] = 0;
        else
            j = Pi[j-1];
    }

}

bool KMP(string pattern, string target)
{
    int m = pattern.length();
    int n = target.length();
    int Pi[m];
   prefix(pattern, Pi);
    int i = 0;
    int k = 0;
    while (i < n)
    {
        if (k == -1)
        {
            i++;
            k = 0;
        }
        else if (target[i] == pattern[k])
        {
            i++;
            k++;
            if (k == m)
                return 1;
        }
        else
            k = Pi[k];
    }
    return 0;
}
int main()
{
    string tar,pat;
    cout<<"Input a string :"; cin>>tar;
    cout<<"Input pattern :";cin>>pat;
    if (KMP(pat, tar))
        cout<<"'"<<pat<<"' found in string '"<<tar<<"'"<<endl;
    else
        cout<<"'"<<pat<<"' not found in string '"<<tar<<"'"<<endl;



    return 0;
}


